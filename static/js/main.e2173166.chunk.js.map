{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","Components/Likes.jsx","Components/Button.jsx","utilities/pagination.js","Components/ListGroup.jsx","Components/User.jsx","Components/Dealer.jsx","Components/Customer.jsx","Components/Login.jsx","Components/Navbar.jsx","Components/paginate.jsx","Components/movies.jsx","App.js","serviceWorker.js","index.js"],"names":["genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","Likes","props","classes","likes","className","onClick","Button","style","backgroundColor","children","paginate","array","pageSize","currentPage","si","ei","slice","ListGroup","items","selectedItem","onItemSelect","valueProperty","map","item","i","key","defaultProps","textProperty","user","Dealer","Customer","login","state","email","password","handleEmail","e","setState","target","value","handlePassword","val","this","length","margin","class","for","onChange","width","type","id","aria-describedby","placeholder","disabled","Component","navbar","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","path","component","Movies","User","Login","itemsCount","onPageChange","noOfPages","Math","ceil","pages","push","page","href","selectedGenre","filter","g","search","handleClick","movie","clonedArray","index","indexOf","handleSearch","console","log","handlePagechange","handleGenreChange","handleDelete","mov","noOfpages","filtered","squery","sarr","startsWith","movieTable","property","padding","App","Navbar","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2173166.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked:true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from 'react';\r\nconst Likes = (props) => {\r\n    let classes = \"fa fa-heart\";\r\n    if (!props.likes) {\r\n        classes = classes + \"-o\";\r\n    }\r\n    return (<i className={classes} onClick={props.onClick}></i>)\r\n}\r\nexport default Likes;\r\n","import React from 'react';\r\nconst Button = (props) => {\r\n\r\n    return (\r\n        <button className=\"btn btn-danger\" style={{ backgroundColor: \"red\" }} onClick={props.onClick}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\nexport default Button;\r\n","const paginate = (array, pageSize, currentPage) => {\r\n    let si = (currentPage - 1) * pageSize;\r\n    let ei = si + pageSize;\r\n    return array.slice(si, ei);\r\n}\r\n\r\nexport default paginate;","import React from 'react';\r\nfunction ListGroup(props) {\r\n    const { items, selectedItem, onItemSelect, valueProperty } = props;\r\n    \r\n    return (\r\n\r\n        <ul className='list-group'>\r\n            {/* {console.log(items)}\r\n            {console.log(selectedItem)} */}\r\n            \r\n            {items.map((item,i) => {\r\n                return (\r\n                    <li key={i}\r\n                        onClick={() => {\r\n                            onItemSelect(item)\r\n                        }}\r\n                        className={\r\n                            item.name === selectedItem.name ? 'list-group-item active' : 'list-group-item'\r\n                        }\r\n\r\n                    >\r\n                        {/* {console.log(item)} */}\r\n                        {item.name}\r\n                    </li>\r\n    \r\n                )\r\n               \r\n            })}\r\n        </ul>\r\n    )\r\n}\r\nListGroup.defaultProps = {\r\n    textProperty: \"name\",\r\n    valueProperty: \"_id\"\r\n}\r\nexport default ListGroup;","import React, { Component } from 'react';\r\nconst user = () => {\r\n    return (\r\n        <h1>User</h1>\r\n    )\r\n}\r\nexport default user;","import React, { Component } from 'react';\r\nfunction Dealer() {\r\n    return (\r\n        <h1>Dealer</h1>\r\n    )\r\n}\r\nexport default Dealer;","import React, { Component } from 'react';\r\nfunction Customer() {\r\n    return (\r\n        <h1> customer</h1>\r\n    )\r\n}\r\nexport default Customer;\r\n","import React, { Component } from 'react';\r\nclass login extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n    handleEmail = (e) => {\r\n        this.setState({ email: e.target.value })\r\n    }\r\n    handlePassword = (e) => {\r\n        this.setState({ password: e.target.value })\r\n\r\n    }\r\n    render() {\r\n        let val = true;\r\n        if (this.state.email.length > 0 && this.state.password.length > 0) {\r\n            val = false;\r\n        }\r\n        return (\r\n            <form style={{ margin: \"100px\" }}>\r\n                <div class=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\">Email address</label>\r\n                    <input value={this.state.email} onChange={this.handleEmail} style={{ width: \"50%\" }} type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n\r\n                    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"exampleInputPassword1\">Password</label>\r\n                    <input onChange={this.handlePassword} value={this.state.password} style={{ width: \"50%\" }} type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n                </div>\r\n                <div class=\"form-group form-check\">\r\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" />\r\n                    <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\r\n                </div>\r\n                <button disabled={val} type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n\r\n\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\nexport default login;","import React from 'react';\r\nimport { Link, Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport User from './User';\r\nimport Dealer from './Dealer';\r\nimport Customer from './Customer';\r\nimport Movies from './movies';\r\nimport Login from './Login';\r\nfunction navbar() {\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <Link to='/' className=\"navbar-brand\">Navbar</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link to='/user' class=\"nav-link\" >Home <span class=\"sr-only\">(current)</span></Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/customer' class=\"nav-link\">Features</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/dealer' class=\"nav-link\" >Pricing</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/Login' class=\"nav-link\" >Login</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n            {/* <Switch> */}\r\n                <Route exact path='/' component={Movies} />\r\n                <Route path='/user' component={User} />\r\n                <Route path='/login' component={Login} />\r\n\r\n\r\n                <Route path='/customer' component={Customer} />\r\n                <Route path='/dealer' component={Dealer} />\r\n            {/* </Switch> */}\r\n        </Router>\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default navbar;","import React from 'react';\r\nfunction paginate(props) {\r\n    const { itemsCount, currentPage, onPageChange, pageSize } = props;\r\n    let noOfPages = Math.ceil(itemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= noOfPages; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n\r\n                {pages.map((page) => {\r\n                    return (\r\n                        <li key={page} className={page === currentPage ? \"page-item active\" : \"page-item\"}>\r\n                            <a href='#' className='page-link' onClick={() => {\r\n                                onPageChange(page)\r\n                            }}>{page}</a>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n       \r\n    )\r\n}\r\nexport default paginate;\r\n","import React, { Component } from 'react';\r\nimport { getMovies } from '../services/fakeMovieService';\r\nimport { getGenres } from '../services/fakeGenreService';\r\nimport PropTypes from 'prop-types';\r\nimport Likes from \"./Likes\";\r\nimport Button from './Button';\r\nimport paginate from '../utilities/pagination';\r\nimport ListGroup from './ListGroup';\r\nimport Navbar from './Navbar';\r\nimport Pagination from './paginate';\r\nclass Movies extends Component {\r\n    state = {\r\n        movies: getMovies(),\r\n        selectedGenre: { name: \"All Genres\" },\r\n        pageSize: 4,\r\n        genres: [{ name: \"All Genres\" }, ...getGenres()],\r\n        currentPage: 1,\r\n        search: ''\r\n\r\n\r\n    };\r\n\r\n\r\n    handleClick = (movie) => {\r\n        let clonedArray = [...this.state.movies];\r\n        let index = clonedArray.indexOf(movie);\r\n        clonedArray[index]['liked'] = !clonedArray[index]['liked'];\r\n        this.setState({ movies: clonedArray });\r\n\r\n    }\r\n    handleSearch = (e) => {\r\n        console.log(e.target.value)\r\n        this.setState({ search: e.target.value });\r\n    }\r\n    handlePagechange = (page) => {\r\n        this.setState({ currentPage: page })\r\n    }\r\n    handleGenreChange = (genre) => {\r\n        this.setState({ selectedGenre: genre, currentPage: 1 });\r\n    }\r\n    handleDelete = (movie) => {\r\n        let clonedArray = [...this.state.movies];\r\n        let index = clonedArray.indexOf(movie);\r\n        let id = clonedArray[index]['_id'];\r\n        clonedArray = clonedArray.filter((mov) => {\r\n            if (mov['_id'] !== id) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        })\r\n        let length = clonedArray.length;\r\n        let noOfpages = Math.ceil(length / this.state.pageSize);\r\n        // console.log(noOfpages )\r\n        if (this.state.currentPage === noOfpages + 1) {\r\n            this.setState({ movies: clonedArray, currentPage: noOfpages })\r\n            console.log(this.state)\r\n        }\r\n        else {\r\n\r\n            this.setState({ movies: clonedArray });\r\n        }\r\n\r\n    }\r\n    render() {\r\n        let filtered = this.state.selectedGenre && this.state.selectedGenre._id ? this.state.movies.filter((movie) => {\r\n            return movie.genre.name === this.state.selectedGenre.name;\r\n        }) : this.state.movies;\r\n        // console.log(filtered)\r\n        // console.log(this.state.selectedGenre)\r\n        let squery = this.state.search;\r\n        let sarr = filtered.filter((movie) => {\r\n            return movie.title.startsWith(squery)\r\n        })\r\n        let arr = paginate(sarr, this.state.pageSize, this.state.currentPage);\r\n\r\n        let movieTable = arr.map((property, i) => {\r\n            return (<tr key={i}>\r\n                <td style={{ padding: \"15px\" }}> {property.title}</td>\r\n                <td style={{ padding: \"15px\" }}>{property.numberInStock}</td>\r\n                <td style={{ padding: \"15px\" }} >{property.dailyRentalRate}</td>\r\n                <td style={{ padding: \"15px\" }} >{property.genre.name}</td>\r\n                <td style={{ padding: \"15px\" }} >\r\n                    <Likes onClick={() => {\r\n                        this.handleClick(property)\r\n                    }\r\n\r\n                    }\r\n                        likes={property.liked} />\r\n                </td>\r\n                <td style={{ padding: \"15px\" }}>\r\n                    <Button onClick={() => {\r\n                        this.handleDelete(property)\r\n                    }}>Delete</Button>\r\n                </td>\r\n\r\n            </tr>)\r\n        })\r\n        return (\r\n            <div>\r\n                <input style={{margin: '15px'}} placeholder={\"Search\"} type=\"text\" value={this.state.search} onChange={this.handleSearch} />\r\n\r\n                {/* {console.log(arr)}\r\n                {console.log(movieTable)} */}\r\n                {/* <Navbar /> */}\r\n                <ListGroup\r\n                    items={this.state.genres}\r\n                    textProperty=\"name\"\r\n                    valueProperty=\"_id\"\r\n                    selectedItem={this.state.selectedGenre}\r\n                    onItemSelect={this.handleGenreChange}\r\n                />\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td style={{ padding: \"15px\" }}>Title</td>\r\n                            <td style={{ padding: \"15px\" }}>Stocks</td>\r\n                            <td style={{ padding: \"15px\" }} > Rental Rate</td>\r\n                            <td style={{ padding: \"15px\" }}>Genre</td>\r\n                            <td style={{ padding: \"15px\" }}>Like</td>\r\n                            <td style={{ padding: \"15px\" }}>Button</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {movieTable}\r\n                    </tbody>\r\n                </table>\r\n                <Pagination\r\n                    itemsCount={filtered.length}\r\n                    currentPage={this.state.currentPage}\r\n                    onPageChange={this.handlePagechange}\r\n                    pageSize={this.state.pageSize}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movies;","import React from 'react';\nimport './App.css';\nimport Movies from './Components/movies';\nimport Navbar from './Components/Navbar'\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport 'font-awesome/css/font-awesome.css';\nfunction App() {\n\n  return (\n    <div>\n      <Navbar />\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}